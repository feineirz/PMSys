<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picIcon.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>