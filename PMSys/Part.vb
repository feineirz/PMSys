'##################################################################'
'This Class automatically generated by FeiNz's SQL Class Generator.
'Credit: FeiNz.net [feineriz@live.com]
'##################################################################'

Imports System.Drawing
Imports System.IO
Imports MySql.Data.MySqlClient
Imports System.Windows.Forms

'If this line above is shows error, please download
'[MySQL Connector for .NET] from http://dev.mysql.com/downloads/connector/net/
'and import reference to the project.

Public Class Part

	'============================== Class Header =============================='

#Region "Class Header"

	Private Shared ConnString As String = "Server=" + My.Settings.Host + ";Database=" + My.Settings.Database + ";Uid=" + My.Settings.Username + ";Pwd=" + My.Settings.Password + ";"
	Private Shared tableName As String = "Part"

	Private _SQLConn As New MySqlConnection(ConnString)
	Private _CMD As MySqlCommand
	Private _QRY As String

	Shared Function BytesToImage(ByVal ImageBytes() As Byte) As Image

		Dim IMG As Image
		Dim MS As New MemoryStream(ImageBytes)

		IMG = Image.FromStream(MS)
		Return IMG

	End Function

	Shared Function ImageToBytes(ByVal Image As Image) As Byte()

		Dim MS As New MemoryStream
		Dim BT() As Byte

		Image.Save(MS, Image.RawFormat)
		BT = MS.GetBuffer()
		Return BT

	End Function

	Shared Function GetMySQLConnection() As MySqlConnection

		Try
			Dim SQLConn As New MySqlConnection(ConnString)
			SQLConn.Open()
			Return SQLConn

		Catch ex As Exception
			Return Nothing

		End Try

	End Function

	Private _part_id As Integer
	Private _part_no As String
	Private _part_name As String
	Private _price As Decimal
	Private _remark As String

	Structure PartInfo
		Dim part_id As Integer
		Dim part_no As String
		Dim part_name As String
		Dim price As Decimal
		Dim remark As String
	End Structure

	'------------ CONSTRUCTOR ------------'
	Sub New(Part_part_id As String, Optional SQLConn As MySqlConnection = Nothing)

		Dim autoCloseConnection As Boolean = False
		If SQLConn Is Nothing Then
			SQLConn = New MySqlConnection(ConnString)
			SQLConn.Open()
			autoCloseConnection = True
		End If

		Dim CMD As MySqlCommand
		Dim RD As MySqlDataReader
		Dim QRY As String

		Try
			QRY = "SELECT *" &
						" FROM " & tableName &
						" WHERE part_id = '" & Part_part_id & "'"

			CMD = New MySqlCommand(QRY, SQLConn)
			RD = CMD.ExecuteReader

			If RD.HasRows Then
				While RD.Read
					_part_id = RD!part_id
					_part_no = RD!part_no
					_part_name = RD!part_name
					_price = RD!price
					_remark = RD!remark
				End While
			End If
			If autoCloseConnection Then SQLConn.Close()

		Catch ex As Exception
			If autoCloseConnection Then SQLConn.Close()
			MsgBox("[Error] Sub : Part.New" & vbCrLf & ex.Message)

		End Try

	End Sub

#End Region

	'============================== Class Properties =============================='

#Region "Class Properties"

	'--- part_id ---'
	ReadOnly Property part_id As Integer
		Get
			Return _part_id
		End Get
	End Property

	'--- part_no ---'
	Property part_no As String
		Get
			Return _part_no
		End Get
		Set(ByVal value As String)
			_QRY = "UPDATE " & tableName &
						 " SET part_no = '" & value & "'" &
						 " WHERE part_id = '" & _part_id & "'"

			Try
				_SQLConn.Open()
				_CMD = New MySqlCommand(_QRY, _SQLConn)
				_CMD.ExecuteNonQuery()
				_SQLConn.Close()

			Catch ex As Exception
				_SQLConn.Close()
				MsgBox("[Error] Property : Part.part_no" & vbCrLf & ex.Message, , "Error")

			End Try

			_part_no = value
		End Set
	End Property

	'--- part_name ---'
	Property part_name As String
		Get
			Return _part_name
		End Get
		Set(ByVal value As String)
			_QRY = "UPDATE " & tableName &
						 " SET part_name = '" & value & "'" &
						 " WHERE part_id = '" & _part_id & "'"

			Try
				_SQLConn.Open()
				_CMD = New MySqlCommand(_QRY, _SQLConn)
				_CMD.ExecuteNonQuery()
				_SQLConn.Close()

			Catch ex As Exception
				_SQLConn.Close()
				MsgBox("[Error] Property : Part.part_name" & vbCrLf & ex.Message, , "Error")

			End Try

			_part_name = value
		End Set
	End Property

	'--- price ---'
	Property price As Decimal
		Get
			Return _price
		End Get
		Set(ByVal value As Decimal)
			_QRY = "UPDATE " & tableName &
						 " SET price = '" & value & "'" &
						 " WHERE part_id = '" & _part_id & "'"

			Try
				_SQLConn.Open()
				_CMD = New MySqlCommand(_QRY, _SQLConn)
				_CMD.ExecuteNonQuery()
				_SQLConn.Close()

			Catch ex As Exception
				_SQLConn.Close()
				MsgBox("[Error] Property : Part.price" & vbCrLf & ex.Message, , "Error")

			End Try

			_price = value
		End Set
	End Property

	'--- remark ---'
	Property remark As String
		Get
			Return _remark
		End Get
		Set(ByVal value As String)
			_QRY = "UPDATE " & tableName &
						 " SET remark = '" & value & "'" &
						 " WHERE part_id = '" & _part_id & "'"

			Try
				_SQLConn.Open()
				_CMD = New MySqlCommand(_QRY, _SQLConn)
				_CMD.ExecuteNonQuery()
				_SQLConn.Close()

			Catch ex As Exception
				_SQLConn.Close()
				MsgBox("[Error] Property : Part.remark" & vbCrLf & ex.Message, , "Error")

			End Try

			_remark = value
		End Set
	End Property

#End Region

	'============================== Required Function =============================='

#Region "Required Function"

	'---------- ADD ----------'
	Shared Function Add(ByVal PartInfoA As PartInfo, Optional SQLConn As MySqlConnection = Nothing) As Boolean

		Dim autoCloseConnection As Boolean = False
		If SQLConn Is Nothing Then
			SQLConn = New MySqlConnection(ConnString)
			SQLConn.Open()
			autoCloseConnection = True
		End If

		Dim CMD As MySqlCommand
		Dim QRY As String

		Try
			QRY = "INSERT INTO " & tableName & "(part_id, part_no, part_name, price, remark)" &
						" VALUES(@part_id, @part_no, @part_name, @price, @remark)"

			CMD = New MySqlCommand(QRY, SQLConn)

			CMD.Parameters.AddWithValue("@part_id", PartInfoA.part_id)
			CMD.Parameters.AddWithValue("@part_no", PartInfoA.part_no)
			CMD.Parameters.AddWithValue("@part_name", PartInfoA.part_name)
			CMD.Parameters.AddWithValue("@price", PartInfoA.price)
			CMD.Parameters.AddWithValue("@remark", PartInfoA.remark)

			CMD.ExecuteNonQuery()
			If autoCloseConnection Then SQLConn.Close()

		Catch ex As Exception
			If autoCloseConnection Then SQLConn.Close()
			MsgBox("[Error] Function : Part.Add" & vbCrLf & ex.Message)
			Return False

		End Try

		Return True

	End Function

	'---------- UPDATE ----------'	
	Shared Function Update(ByVal PartInfoA As PartInfo, Optional SQLConn As MySqlConnection = Nothing) As Boolean

		Dim autoCloseConnection As Boolean = False
		If SQLConn Is Nothing Then
			SQLConn = New MySqlConnection(ConnString)
			SQLConn.Open()
			autoCloseConnection = True
		End If

		Dim CMD As MySqlCommand
		Dim QRY As String

		Try
			QRY = "UPDATE " & tableName &
					" SET" &
					" part_no = @part_no," &
					" part_name = @part_name," &
					" price = @price," &
					" remark = @remark" &
					" WHERE part_id='" & PartInfoA.part_id & "'"

			CMD = New MySqlCommand(QRY, SQLConn)

			CMD.Parameters.AddWithValue("@part_no", PartInfoA.part_no)
			CMD.Parameters.AddWithValue("@part_name", PartInfoA.part_name)
			CMD.Parameters.AddWithValue("@price", PartInfoA.price)
			CMD.Parameters.AddWithValue("@remark", PartInfoA.remark)

			CMD.ExecuteNonQuery()
			If autoCloseConnection Then SQLConn.Close()

		Catch ex As Exception
			If autoCloseConnection Then SQLConn.Close()
			MsgBox("[Error] Function : Part.Update" & vbCrLf & ex.Message)
			Return False

		End Try

		Return True

	End Function

	'---------- DELETE ----------'
	Shared Function Delete(ByVal Part_part_id As String, Optional SQLConn As MySqlConnection = Nothing) As Boolean

		Dim autoCloseConnection As Boolean = False
		If SQLConn Is Nothing Then
			SQLConn = New MySqlConnection(ConnString)
			SQLConn.Open()
			autoCloseConnection = True
		End If

		Dim CMD As MySqlCommand
		Dim QRY As String

		Try
			QRY = "DELETE FROM" &
						" " & tableName &
						" WHERE part_id='" & Part_part_id & "'"

			CMD = New MySqlCommand(QRY, SQLConn)
			CMD.ExecuteNonQuery()
			If autoCloseConnection Then SQLConn.Close()

		Catch ex As Exception
			If autoCloseConnection Then SQLConn.Close()
			MsgBox("[Error] Function : Part.Delete" & vbCrLf & ex.Message)
			Return False

		End Try

		Return True

	End Function

	'----- Structure for LIST -----'
	Structure ListItem
		Dim Items() As PartInfo
		Dim Count As Integer
	End Structure

	'---------- LIST ----------'
	Shared Function List(Optional ByVal Condition As String = "", Optional ByVal SortOrder As String = "part_id", Optional SQLConn As MySqlConnection = Nothing) As ListItem

		If Not Condition = "" Then Condition = " WHERE " & Condition
		If Not SortOrder = "" Then SortOrder = " ORDER BY " & SortOrder

		Dim autoCloseConnection As Boolean = False
		If SQLConn Is Nothing Then
			SQLConn = New MySqlConnection(ConnString)
			SQLConn.Open()
			autoCloseConnection = True
		End If

		Dim CMD As MySqlCommand
		Dim RD As MySqlDataReader
		Dim QRY As String

		Dim ListItemA As ListItem
		Dim PartInfoA() As PartInfo = Nothing

		ListItemA.Items = Nothing
		ListItemA.Count = 0

		Try
			QRY = "SELECT *" &
						" FROM " & tableName &
						" " & Condition &
						" " & SortOrder

			CMD = New MySqlCommand(QRY, SQLConn)
			RD = CMD.ExecuteReader
			Dim Ix As Integer = 0
			If RD.HasRows Then

				While RD.Read
					ReDim Preserve PartInfoA(Ix)

					PartInfoA(Ix).part_id = RD!part_id
					PartInfoA(Ix).part_no = RD!part_no
					PartInfoA(Ix).part_name = RD!part_name
					PartInfoA(Ix).price = RD!price
					PartInfoA(Ix).remark = RD!remark

					Ix += 1
				End While
			End If

			If autoCloseConnection Then SQLConn.Close()

			ListItemA.Items = PartInfoA
			ListItemA.Count = Ix

		Catch ex As Exception
			If autoCloseConnection Then SQLConn.Close()
			ListItemA.Count = 0
			MsgBox("[Error] Function : Part.List" & vbCrLf & ex.Message)

		End Try

		Return ListItemA

	End Function

	'----- Class for TOCOMBOBOXITEMS -----'
	Public Class ComboBoxItems

		Private _DisplayMember As String
		Private _subDisplayMember As String
		Private _ValueMember As String

		Public Overrides Function ToString() As String
			Return _ValueMember
		End Function

		Public Function ToCodeName() As String
			Return _DisplayMember
		End Function

		Public Sub New(ByVal DisplayMember As String, ByVal ValueMember As String)
			_DisplayMember = DisplayMember
			_ValueMember = ValueMember
		End Sub
		Public ReadOnly Property DisplayMember() As String
			Get
				Return _DisplayMember
			End Get
		End Property

		Public ReadOnly Property ValueMember() As String
			Get
				Return _ValueMember
			End Get
		End Property

	End Class

	'---------- TOCOMBOBOXITEMS ----------'
	Shared Function ToComboBoxItems(ByRef RefCMB As ComboBox, DisplayMember As String, ValueMember As String, Optional subDisplayMember As String = "", Optional Delimeter As String = " : ", Optional ByVal Condition As String = "", Optional ByVal SortOrder As String = "part_id", Optional SQLConn As MySqlConnection = Nothing) As List(Of ComboBoxItems)

		If Not Condition = "" Then Condition = " WHERE " & Condition
		If Not SortOrder = "" Then SortOrder = " ORDER BY " & SortOrder

		Dim autoCloseConnection As Boolean = False
		If SQLConn Is Nothing Then
			SQLConn = New MySqlConnection(ConnString)
			SQLConn.Open()
			autoCloseConnection = True
		End If

		Dim RD As MySqlDataReader
		Dim CMD As MySqlCommand
		Dim QRY As String

		Dim cmbItems = New List(Of ComboBoxItems)

		Try
			QRY = "SELECT * " &
						" FROM " & tableName &
						" " & Condition &
						" " & SortOrder

			CMD = New MySqlCommand(QRY, SQLConn)
			CMD.CommandTimeout = 30
			RD = CMD.ExecuteReader()

			If RD.HasRows = True Then
				While RD.Read()
					If Not subDisplayMember = "" Then
						Dim DM As String = RD.Item(DisplayMember) & Delimeter & RD.Item(subDisplayMember)
						Dim VM As String = RD.Item(ValueMember)
						cmbItems.Add(New ComboBoxItems(DM, VM))
					Else
						cmbItems.Add(New ComboBoxItems(RD.Item(DisplayMember), RD.Item(ValueMember)))
					End If
				End While
			End If

			If autoCloseConnection Then SQLConn.Close()

		Catch ex As Exception
			If autoCloseConnection Then SQLConn.Close()
			MsgBox("[Error] Function : Part.ToComboBoxItems" & vbCrLf & ex.Message)

		End Try

		RefCMB.DisplayMember = "DisplayMember"
		RefCMB.ValueMember = "ValueMember"
		RefCMB.DataSource = cmbItems

		Return cmbItems

	End Function

	'---------- TOCLASSINFO ----------'
	Function ToPartInfo() As PartInfo

		Dim CI As PartInfo = Nothing

		CI.part_id = _part_id
		CI.part_no = _part_no
		CI.part_name = _part_name
		CI.price = _price
		CI.remark = _remark

		Return CI

	End Function

	'---------- COUNT ----------'
	Shared Function Count(ByVal Condition As String, Optional SQLConn As MySqlConnection = Nothing) As Integer

		Dim autoCloseConnection As Boolean = False
		If SQLConn Is Nothing Then
			SQLConn = New MySqlConnection(ConnString)
			SQLConn.Open()
			autoCloseConnection = True
		End If

		Dim CMD As MySqlCommand
		Dim recCount As Integer = 0
		Dim QRY As String

		Try
			QRY = "SELECT COUNT(part_id) " &
						" FROM Part " &
						" WHERE " & Condition

			CMD = New MySqlCommand(QRY, SQLConn)
			recCount = CMD.ExecuteScalar
			If autoCloseConnection Then SQLConn.Close()

		Catch ex As Exception
			If autoCloseConnection Then SQLConn.Close()
			MsgBox("[Error] Function : Part.Count" & vbCrLf & ex.Message)

		End Try

		Return recCount

	End Function

	'---------- CLEAR TABLE ----------'
	Shared Function ClearTable(Optional SQLConn As MySqlConnection = Nothing) As Boolean

		Dim autoCloseConnection As Boolean = False
		If SQLConn Is Nothing Then
			SQLConn = New MySqlConnection(ConnString)
			SQLConn.Open()
			autoCloseConnection = True
		End If

		Dim CMD As MySqlCommand
		Dim QRY As String

		Try

			QRY = "DELETE FROM" &
					" " & tableName

			CMD = New MySqlCommand(QRY, SQLConn)
			CMD.ExecuteNonQuery()

			QRY = "ALTER TABLE " & tableName & " AUTO_INCREMENT = 0"
			CMD = New MySqlCommand(QRY, SQLConn)
			CMD.ExecuteNonQuery()

			If autoCloseConnection Then SQLConn.Close()

		Catch ex As Exception
			If autoCloseConnection Then SQLConn.Close()
			MsgBox("[Error] Function : Part.ClearTable" & vbCrLf & ex.Message)
			Return False

		End Try

		Return True

	End Function

#End Region

	'============================== Custom Functions =============================='

#Region "Custom Functions"

	'-----------------------------------------------'
	'---------- ADD CUSTOM FUNCTIONS HERE ----------'
	'-----------------------------------------------'
	'---- DO NOT COPY OR PASTE ON THIS SECTION -----'
	'-----------------------------------------------'




#End Region

End Class
