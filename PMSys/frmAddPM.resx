<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picIcon.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAB
        YgAAAWIBXyfQUwAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAdxSURBVHhe7Zvf
        bxRVFMdJTNQHY4x/A2qIkReBWIMJtWiBFxME8cVEJaht9QEf8AVNLFhjC5QWivwosUCN7aqxptISoCvQ
        FsSCtMW2FFoJCLTQbSkK25bu7vGc7dztnbtnfu3MbKlwks9Ld3Zzv9+599xz7kxnpCNyqmFdbjX8i4DK
        0/nJzPoCYi8Vw1Ht69M73v8BnuKECzgDBK9shSztZ6Zv5AZgPidcwAkXZJVBrvYz0zceGPB/M+Dtb+BR
        HPhu5CqyfXkAHtY+YsNPAxaUwWMZG6HjuQKIvLARuhcUwxPaR/7ER3XwSE4AahUR9WSKdklS+GUAiZ9X
        BH3y9XMLIZRdDk9ql3gbBuIFhib4YQAnXuCLCSQO9/IDnAABmUMmaV9JBBqwiLtewIkQLCyFtdrPJGJx
        JTw+rxD6uesFc4pgwLPlYEe8QJiAeeGhvCp4E/92CInI16hwAgTPIHRHM0ug9FnMNXbECzwxwYn4BAE4
        llsFvexnDNzgOWZ/CXefL4Rh7jMjXJlgseY9gxu4l6SUE9IlnuAG7TWOTcCB0T7PDthruAH7AdUJmjzr
        wIFRkcMO2Gu4wfoBFUuaPOvAgW1XB+qWj3+MwbajEahrH4PTf43Chb4wXBkIQ3fvAHT1DkLb+SEItg3D
        hvowzN8YZUW4gSpGTZ51UHmL2byGE+KU9fVRCHaNwfXBOzA4nMy5ngGGEBz/cxhW7RtjxThlbhHccLwb
        uDXhk5oYHOkahRAjWoY3YBIyIrsswgqzQ0riRZAJedXwMyfQjNJgBP7G6c0JVuFEJ9EbgnW1I6xAM+YU
        elAMOTVhz4lxCN3kxbZfHoXatnHY3RyFa6EJg0jgyY5BeKM8BqsDEdh77DZ0qQZofNd8mxXK4Yl4EVQX
        xCs8RrAMiVdFE6cw6e1ojMGGw5CAEiB9RsKazt6ERWWQYNkugO3BcJIBRGWTtQlUMVLZrA3ffVBtjwIv
        qIJlaNqrd57uclVLRCdc8FvvWMKA4gOjOgMEK/dF4XecHaoJ+RbLYXYBjJu16I5Da2xY4QQlPHXNX7oR
        hl1NUVY8sakB4Kcz45BXFYEl25LFC5aXA/zaelNvAuYEq8T4cgls1obvPlAkdXWseIKyvSye7ryZeBlO
        tAqZoM4E2h044QIqf7XhWwcdXWPXt5AD7/5rKNKwpc2viyZtdUbTnoMTzLGyMqozgPjgW+M6gVrprBIo
        yNoCazgSR+4oIl8V5QQqcmTxlPA4oUZwYt+qiEIR5oWlO2O6v+9o0CfG4x3ms8CK+MMXFME+sbEDlbfX
        h/R3X832VsgClyDVJ+5geRyKC6QSeemuSRNex6Ugb5HdWDG+6KJsnrUeYmQAK84OVNvL4tsvGd/9w513
        4SomSqoFdjZNmiTEvVcZgdbzSrJDig/pd4h9jbd1nxfWOy+QZFwZQI2NbAAVObJoASVE+TqaNeJaElXR
        ONEUycIImglkjGzA6u8jumsaWm+xwuziyoBTF0d0wsoNMv9OXBbydYIzOGNOdw/rBAlo+uf/MqYTT6zY
        HdNd14pdJCfMLq4M6MGWVhbUNxiOT3Mqcmifl02obx+HAaZElsUImjtu4dY3ufapTth8cBSasWJsUbZD
        MooTZhdXBpg1PFTkyAYQFSeicLFf/x1ZDE35suCI7o4TH2KxJF+nA7/DCbNLWg0ginFmNHZP5g4hhJYC
        bX+qeIKqRZ1omak0wHAJ9CQvAZUAFksX+kags2cIG5/kuy5DS4D6hXtuCahJkNpcTqwZnGAz7qkkaHcb
        NIMTaYa6DR6eym1QLYTOYpHDiTSDE2kGnQfIBnxV574QSrkUXo2lcL9SCstVnh04kUYsY0rhjCKXpTB2
        e59z4uwS7NQvg9MX3TdDRuwI6rfNZpfN0PxNcGSiIwzATK4VJlJph6tPed8Or2La4Xf3pt4OZ5dBZly8
        nUChpgci6izox+3Q7o7AiVWhqa9uf00Wd9/RgYhVWB2JramJweUb+pogfiRmYgLVCTV2j8Tako/EXt2S
        xiMxO4eim7lDUZwJRsvhpHwoinU+J56mfUtn8qHoZzWjrGgBvUvg6aGo3WPxiuP8sfgfmBjV3cH0WBzv
        uprwBHsb03ws7uWDEaoT9mNXyD4YwQqPihza540ejFQcu8MK5piSp0ICWg5qTjCCE5oErnmrac/hyoRU
        xQsoMdLu4PbhKGV7q4RnRkomuBUvQ3VCAxqhVoxmBlCFR0XOO3vusqKc4tgEHLjnL0hQ2bz1SAT2t41B
        C70gcS0cP0/oJtHY0lJXR40NHXK6KW+NcPSCBA74Pn9FpgrKucH6ATdYP3D0khTlgPv6NTmKdJnADdhL
        UhIv4r5+VVZEqi9LoxEr8G8HEdcvS1NjMyUvS4uwY4IQr30lETlVsJi7XsANXpBZAp9qP5OItL8uL8I0
        JwSgzqj7ws+m/z9MiGBNMBFP4YcBFGn/lxkRJFarE64gX5Mp2kds+GUAhfxPUxkb4Jzn096L8NOAaREP
        DHhgAMzkhAs44QJHR9f3cmgPX/5RxROccHpik3ho4WvMmPEfk+1OCxLfF6UAAAAASUVORK5CYII=
</value>
  </data>
</root>