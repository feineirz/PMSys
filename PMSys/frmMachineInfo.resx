<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picIcon.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>