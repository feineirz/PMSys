<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picIcon.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>