<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picIcon.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        pyKRbwO9KMcAAAAASUVORK5CYII=
</value>
  </data>
</root>